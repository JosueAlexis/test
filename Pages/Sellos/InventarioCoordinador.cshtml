@page
@model ProyectoRH2025.Pages.Sellos.InventarioCoordinadorModel
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery
@{
    ViewData["Title"] = "Inventario del Coordinador";
    Layout = "~/Pages/Shared/_Layout.cshtml";
    var token = Antiforgery.GetAndStoreTokens(HttpContext).RequestToken;
}

<h2 class="mb-4">
    <i class="fas fa-box-open text-primary"></i> Inventario de Sellos Asignados
</h2>

<input type="hidden" id="requestVerificationToken" name="__RequestVerificationToken" value="@token" />

<table id="tablaSellos" class="table table-hover table-bordered align-middle shadow-sm">
    <thead class="table-light text-center">
        <tr>
            <th>Sello</th>
            <th>Operador</th>
            <th>Unidad</th>
            <th>Ruta</th>
            <th>Fecha Asignación</th>
            <th>Tipo</th>
            <th>Acciones</th>
        </tr>
    </thead>
    <tbody class="text-center">
        @foreach (var item in Model.SellosAsignados)
        {
            <tr>
                <td>@item.Sello</td>
                <td>@item.OperadorNombre</td>
                <td>@item.Unidad</td>
                <td>@item.Ruta</td>
                <td>@item.Fentrega.ToString("dd/MM/yyyy hh:mm tt")</td>
                <td>
                    <span class="badge bg-info">@((item.TipoAsignacion == 1 ? "Comboy" : "Individual"))</span>
                </td>
                <td>
                    <!-- CAMBIO IMPORTANTE: Quité data-bs-toggle y data-bs-target -->
                    <button class="btn btn-success btn-sm me-1 btn-accion-modal" data-id="@item.id" data-accion="entregar">
                        <i class="fas fa-hand-holding"></i> Entregar
                    </button>
                    <button class="btn btn-primary btn-sm btn-accion-modal" data-id="@item.id" data-accion="recibir">
                        <i class="fas fa-undo-alt"></i> Recibir
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- El resto del código del modal permanece igual -->
<div class="modal fade" id="modalHuellas" tabindex="-1" aria-labelledby="modalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content shadow">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="modalLabel">
                    <i class="fas fa-fingerprint me-2"></i> Validación de Huellas
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body">
                <p><strong>Acción:</strong> <span id="accionTitulo" class="text-capitalize"></span></p>
                <p id="indicadorLectura">Presiona "Confirmar" para iniciar la validación</p>
                <div id="resultadoValidacion" class="alert alert-info">Esperando validación...</div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="fas fa-times-circle"></i> Cancelar
                </button>
                <button type="button" class="btn btn-success" id="btnConfirmarAccion" data-id="">
                    <i class="fas fa-check-circle"></i> Confirmar
                </button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modalRegistrarHuella" tabindex="-1" aria-labelledby="modalRegistroLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-centered">
        <div class="modal-content shadow">
            <div class="modal-header bg-warning text-dark">
                <h5 class="modal-title" id="modalRegistroLabel">
                    <i class="fas fa-hand-pointer me-2"></i> Registrar Huella Nueva
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body text-center">
                <p>Selecciona el dedo que deseas registrar:</p>
                <p>Registrando huella de: <strong id="tipoPersonaHuella" class="text-uppercase text-primary"></strong></p>

                <div class="container-fluid">
                    <div class="row justify-content-center align-items-start">
                        <div class="col-md-6 col-sm-12 mb-3">
                            <h5 class="text-muted">Mano Izquierda</h5>
                            <div class="mano-container">
                                <img src="/img/mano_seleccion_dedos.png" class="img-fluid mano-imagen" alt="Mano Izquierda">
                                <div class="dedos-botones-overlay">
                                    <button type="button" class="btn btn-dedo" data-mano="izquierda" data-dedo="Pulgar Izquierdo" style="top: 35%; left: 15%;"></button>
                                    <button type="button" class="btn btn-dedo" data-mano="izquierda" data-dedo="Índice Izquierdo" style="top: 12%; left: 30%;"></button>
                                    <button type="button" class="btn btn-dedo" data-mano="izquierda" data-dedo="Medio Izquierdo" style="top: 8%;  left: 48%;"></button>
                                    <button type="button" class="btn btn-dedo" data-mano="izquierda" data-dedo="Anular Izquierdo" style="top: 12%; left: 65%;"></button>
                                    <button type="button" class="btn btn-dedo" data-mano="izquierda" data-dedo="Meñique Izquierdo" style="top: 25%; left: 78%;"></button>
                                </div>
                            </div>
                        </div>

                        <div class="col-md-6 col-sm-12 mb-3">
                            <h5 class="text-muted">Mano Derecha</h5>
                            <div class="mano-container">
                                <img src="/img/mano_derecha.png" class="img-fluid mano-imagen" alt="Mano Derecha">
                                <div class="dedos-botones-overlay">
                                    <button type="button" class="btn btn-dedo" data-mano="derecha" data-dedo="Meñique Derecho" style="top: 25%; left: 15%;"></button>
                                    <button type="button" class="btn btn-dedo" data-mano="derecha" data-dedo="Anular Derecho" style="top: 12%; left: 30%;"></button>
                                    <button type="button" class="btn btn-dedo" data-mano="derecha" data-dedo="Medio Derecho" style="top: 8%;  left: 48%;"></button>
                                    <button type="button" class="btn btn-dedo" data-mano="derecha" data-dedo="Índice Derecho" style="top: 12%; left: 65%;"></button>
                                    <button type="button" class="btn btn-dedo" data-mano="derecha" data-dedo="Pulgar Derecho" style="top: 35%; left: 78%;"></button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div id="dedoSeleccionadoInfo" class="alert alert-info mt-3" style="display: none; max-width: 400px; margin: 15px auto 0 auto;">
                    Dedo seleccionado: <strong id="nombreDedoSeleccionado"></strong>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary" id="btnRegistrarHuella">Registrar Huella</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/dataTables.bootstrap5.min.css" />
    <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.6/js/dataTables.bootstrap5.min.js"></script>

    <style>
        div.dataTables_filter input {
            padding-left: 2rem;
            background-image: url('https://cdn-icons-png.flaticon.com/512/622/622669.png');
            background-repeat: no-repeat;
            background-size: 16px 16px;
            background-position: 8px center;
            border-radius: 0.375rem;
        }

        .dataTables_length select {
            border-radius: 0.375rem;
        }

        .mano-container {
            position: relative;
            display: inline-block;
            max-width: 300px;
            margin: 0 auto;
            border: 1px solid #eee;
            min-height: 200px;
            background-color: #f8f9fa;
        }

        .mano-imagen {
            display: block;
            width: 100%;
            height: auto;
        }

        .dedos-botones-overlay {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
        }

        .btn-dedo {
            position: absolute;
            width: 35px;
            height: 35px;
            border-radius: 50%;
            background-color: rgba(0, 123, 255, 0.4);
            border: 2px solid rgba(0, 123, 255, 0.8);
            padding: 0;
            transform: translate(-50%, -50%);
            transition: all 0.2s ease-in-out;
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 10;
            cursor: pointer;
        }

            .btn-dedo:hover {
                background-color: rgba(0, 123, 255, 0.6);
                border-color: #0056b3;
                transform: translate(-50%, -50%) scale(1.1);
            }

            .btn-dedo.seleccionado {
                background-color: rgba(220, 53, 69, 0.7);
                border-color: #b02a37;
                box-shadow: 0 0 12px 3px rgba(220, 53, 69, 0.6);
                transform: translate(-50%, -50%) scale(1.15);
            }

            .btn-dedo i {
                color: white;
                font-size: 0.8rem;
            }

        /* FIX CRÍTICO: Modal sin backdrop oscuro */
        .modal {
            z-index: 1050 !important;
            background-color: rgba(0,0,0,0.1) !important; /* Fondo muy sutil */
        }

        .modal-dialog {
            z-index: 1060 !important;
            margin: 50px auto !important;
        }

        /* Contenido del modal bien visible */
        .modal-content {
            z-index: 1070 !important;
            position: relative;
            box-shadow: 0 10px 30px rgba(0,0,0,0.3) !important;
            border: 2px solid #007bff !important;
        }

        /* Asegurar que no haya backdrop problemático */
        .modal-backdrop {
            display: none !important;
        }
    </style>

    <script>
        var dedoActualmenteSeleccionado = null;

        $(document).ready(function () {
            console.log("Página cargada, inicializando...");

            // Inicializar DataTable
            $('#tablaSellos').DataTable({
                language: {
                    search: "",
                    searchPlaceholder: "Buscar...",
                    lengthMenu: "Mostrar _MENU_ registros",
                    info: "Mostrando _START_ a _END_ de _TOTAL_ entradas",
                    paginate: { previous: "Anterior", next: "Siguiente" },
                    zeroRecords: "No se encontraron resultados"
                },
                lengthMenu: [5, 10, 25, 50, 100],
                pageLength: 10
            });

            // CAMBIO IMPORTANTE: Manejador manual para abrir modal SIN BACKDROP
            $('.btn-accion-modal').on('click', function(e) {
                e.preventDefault();
                console.log("Botón clickeado");

                var idSeleccionado = $(this).data('id');
                var accion = $(this).data('accion');

                console.log("ID:", idSeleccionado, "Acción:", accion);

                // Configurar el modal
                $('#accionTitulo').text(accion.charAt(0).toUpperCase() + accion.slice(1));
                $('#btnConfirmarAccion').data('id', idSeleccionado);
                $('#resultadoValidacion').removeClass().addClass('alert alert-info').text('Esperando validación...');
                $('#indicadorLectura').text('Presiona "Confirmar" para iniciar la validación');

                // Limpiar cualquier backdrop previo
                $('.modal-backdrop').remove();

                // Abrir modal manualmente SIN backdrop oscuro
                console.log("Abriendo modal...");
                var modalElement = document.getElementById('modalHuellas');

                // Método directo sin Bootstrap y SIN backdrop
                modalElement.style.display = 'block';
                modalElement.classList.add('show');
                modalElement.setAttribute('aria-hidden', 'false');
                modalElement.setAttribute('aria-modal', 'true');
                modalElement.setAttribute('role', 'dialog');

                // NO agregamos modal-open al body para evitar el oscurecimiento
                // document.body.classList.add('modal-open');

                // NO creamos backdrop - modal sin fondo oscuro
                console.log("Modal abierto sin backdrop oscuro");
            });

            // Función para cerrar el modal correctamente
            $(document).on('click', '[data-bs-dismiss="modal"], .btn-close', function() {
                console.log("Cerrando modal...");
                var modalElement = document.getElementById('modalHuellas');

                if (modalElement) {
                    modalElement.style.display = 'none';
                    modalElement.classList.remove('show');
                    modalElement.setAttribute('aria-hidden', 'true');
                    modalElement.removeAttribute('aria-modal');
                    modalElement.removeAttribute('role');

                    // Remover cualquier backdrop que pueda existir
                    var allBackdrops = document.querySelectorAll('.modal-backdrop');
                    allBackdrops.forEach(function(backdrop) {
                        backdrop.remove();
                    });

                    // Asegurar que el body no tenga clases de modal
                    document.body.classList.remove('modal-open');

                    console.log("Modal cerrado correctamente");
                }
            });

            // Cerrar modal con Escape
            $(document).on('keydown', function(e) {
                if (e.key === 'Escape' || e.keyCode === 27) {
                    if ($('#modalHuellas').hasClass('show')) {
                        console.log("Cerrando modal con Escape");
                        $('[data-bs-dismiss="modal"]').first().click();
                    }
                }
            });
            $('#btnConfirmarAccion').on('click', async function () {
                var id = $(this).data('id');
                var requestToken = $('#requestVerificationToken').val();

                $('#indicadorLectura').html('Coloque la huella del <strong>OPERADOR</strong>.');
                $('#resultadoValidacion').text('Leyendo huella del operador...');
                var huellaOperador = await capturarHuella();
                if (!huellaOperador) {
                    $('#resultadoValidacion').removeClass().addClass('alert alert-danger').text('Error al leer huella del operador.');
                    return;
                }

                $('#indicadorLectura').html('Coloque la huella del <strong>COORDINADOR</strong>.');
                $('#resultadoValidacion').text('Leyendo huella del coordinador...');
                var huellaCoordinador = await capturarHuella();
                if (!huellaCoordinador) {
                    $('#resultadoValidacion').removeClass().addClass('alert alert-danger').text('Error al leer huella del coordinador.');
                    return;
                }
                $('#resultadoValidacion').text('Validando huellas...');

                fetch('?handler=ActualizarEstado', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': requestToken
                    },
                    body: JSON.stringify({
                        id: id,
                        huellaOperador: huellaOperador,
                        huellaCoordinador: huellaCoordinador
                    })
                })
                .then(function(res) { return res.json(); })
                .then(function(data) {
                    if (data.success) {
                        $('#resultadoValidacion').removeClass().addClass('alert alert-success').text('Huellas válidas. Estado actualizado.');
                        setTimeout(function() { location.reload(); }, 1500);
                    } else if (data.registrar) {
                        $('#modalHuellas').modal('hide');
                        $('#modalRegistrarHuella').data('persona', data.registrar);
                        $('#modalRegistrarHuella').data('idpersona', data.idPersona);
                        $('#modalRegistrarHuella').modal('show');
                    } else {
                        $('#resultadoValidacion').removeClass().addClass('alert alert-danger').text(data.error || 'Las huellas no coinciden.');
                    }
                })
                .catch(function() {
                    $('#resultadoValidacion').removeClass().addClass('alert alert-danger').text('Error en la validación del servidor.');
                });
            });

            // Manejo de selección de dedos
            $('.btn-dedo').on('click', function() {
                var botonClickeado = $(this);
                var nombreDedo = botonClickeado.data('dedo');

                if (botonClickeado.hasClass('seleccionado')) {
                    return;
                }

                $('.btn-dedo').removeClass('seleccionado');
                botonClickeado.addClass('seleccionado');
                dedoActualmenteSeleccionado = nombreDedo;

                $('#nombreDedoSeleccionado').text(dedoActualmenteSeleccionado);
                $('#dedoSeleccionadoInfo').show();

                console.log('Dedo seleccionado:', dedoActualmenteSeleccionado);
            });

            // Modal de registro de huella
            $('#modalRegistrarHuella').on('show.bs.modal', function (event) {
                var persona = $(this).data('persona');
                $('#tipoPersonaHuella').text(persona ? persona.toUpperCase() : 'N/A');

                $('.btn-dedo').removeClass('seleccionado');
                dedoActualmenteSeleccionado = null;
                $('#dedoSeleccionadoInfo').hide();
                $('#nombreDedoSeleccionado').text('');
            });

            $('#btnRegistrarHuella').on('click', async function () {
                var persona = $('#modalRegistrarHuella').data('persona');
                var idPersona = $('#modalRegistrarHuella').data('idpersona');
                var requestToken = $('#requestVerificationToken').val();

                if (!dedoActualmenteSeleccionado) {
                    alert("Por favor selecciona un dedo antes de registrar.");
                    return;
                }

                var huella = await capturarHuella();
                if (!huella) {
                    alert("Error al capturar la huella. Asegúrate que el dispositivo está conectado y la huella fue leída.");
                    return;
                }

                fetch('/api/Huellas/Guardar', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': requestToken
                    },
                    body: JSON.stringify({
                        huella: huella,
                        dedo: dedoActualmenteSeleccionado,
                        idEmpleado: persona === 'operador' ? idPersona : null,
                        idUsuario: persona === 'coordinador' ? idPersona : null
                    })
                })
                .then(async function(res) {
                    if (!res.ok) {
                        var errorData = await res.json().catch(function() {
                            return { error: "Error desconocido del servidor." };
                        });
                        throw new Error(errorData.error || "Error del servidor: " + res.status);
                    }
                    return res.json();
                })
                .then(function(data) {
                    if (data.success) {
                        alert("Huella registrada correctamente.");
                        $('#modalRegistrarHuella').modal('hide');
                    } else {
                        alert(data.error || "Error al registrar huella.");
                    }
                })
                .catch(function(error) {
                    console.error("Error en registro:", error);
                    alert("Error al enviar la huella al servidor: " + error.message);
                });
            });
        });

        async function capturarHuella() {
            try {
                var requestToken = $('#requestVerificationToken').val();
                var response = await fetch("?handler=LeerHuella", {
                    method: "POST",
                    headers: {
                        "RequestVerificationToken": requestToken
                    }
                });
                if (!response.ok) {
                    var errorData = await response.json().catch(function() { return null; });
                    console.error("Error en LeerHuella:", response.status, errorData);
                    return null;
                }
                var data = await response.json();
                if (data.success && data.template) {
                    return data.template;
                } else {
                    console.error("LeerHuella no tuvo éxito:", data.error);
                    return null;
                }
            } catch (error) {
                console.error("Excepción al llamar a LeerHuella:", error);
                return null;
            }
        }
    </script>
}