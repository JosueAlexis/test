@page "{id:int?}"
@model ProyectoRH2025.Pages.Liquidaciones.DetallesModel
@{
    ViewData["Title"] = "Detalles de Liquidación";
}

<!-- OPCIÓN 1: Escapar las reglas CSS problemáticas -->
<style>
    .details-container {
        padding: 20px;
        background-color: #f8f9fa;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

    .details-header {
        margin-bottom: 20px;
        padding-bottom: 10px;
        border-bottom: 1px solid #dee2e6;
    }

    .details-section {
        margin-bottom: 15px;
    }

        .details-section dt {
            font-weight: bold;
            color: #495057;
        }

        .details-section dd {
            margin-left: 0;
            color: #6c757d;
        }

    /* OPTIMIZACIÓN: Lazy loading para imágenes */
    .images-gallery {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
        gap: 15px;
        margin-top: 20px;
    }

    .image-container {
        position: relative;
        border-radius: 4px;
        border: 1px solid #dee2e6;
        overflow: hidden;
        aspect-ratio: 4/3;
        background-color: #f8f9fa;
        transition: all 0.3s ease;
    }

        .image-container:hover {
            transform: scale(1.02);
            box-shadow: 0 4px 8px rgba(0,0,0,0.15);
            border-color: #007bff;
        }

        /* NUEVO: Estilos para imágenes de SharePoint */
        .image-container.sharepoint-image {
            border-color: #2196f3;
            background: linear-gradient(135deg, #e3f2fd, #f3e5f5);
        }

            .image-container.sharepoint-image:hover {
                border-color: #1976d2;
                box-shadow: 0 4px 8px rgba(33, 150, 243, 0.3);
            }

    .sharepoint-overlay {
        position: absolute;
        top: 5px;
        right: 5px;
        background: #2196f3;
        color: white;
        padding: 4px 8px;
        border-radius: 4px;
        font-size: 0.7rem;
        font-weight: 500;
        z-index: 10;
    }

    /* NUEVO: Indicador de origen de datos */
    .data-source-indicator {
        display: inline-flex;
        align-items: center;
        padding: 6px 12px;
        border-radius: 20px;
        font-size: 0.8rem;
        font-weight: 500;
        margin-left: 10px;
    }

    .source-database {
        background: linear-gradient(135deg, #28a745, #20c997);
        color: white;
        border: none;
    }

    .source-sharepoint {
        background: linear-gradient(135deg, #0066cc, #0080ff);
        color: white;
        border: none;
    }

    .lazy-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
        cursor: pointer;
        transition: opacity 0.3s ease;
        opacity: 0;
    }

        .lazy-image.loaded {
            opacity: 1;
        }

    .image-placeholder {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: #e9ecef;
        color: #6c757d;
        font-size: 0.8rem;
        text-align: center;
    }

    .loading-spinner {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        border: 2px solid #f3f3f3;
        border-radius: 50%;
        border-top: 2px solid #007bff;
        width: 20px;
        height: 20px;
        animation: spin 1s linear infinite;
    }

    .spinner-animation {
        animation: spin 1s linear infinite;
    }

    .no-images {
        font-style: italic;
        color: #6c757d;
    }

    .error-message {
        color: #721c24;
        background-color: #f8d7da;
        border-color: #f5c6cb;
        padding: 10px;
        border-radius: 4px;
        margin-bottom: 20px;
    }

    .performance-info {
        background: linear-gradient(45deg, #28a745, #20c997);
        color: white;
        border: none;
        border-radius: 8px;
        font-size: 0.85rem;
    }
    /*IMAGENES CICLEABLES DE SHAREPOINT*/
    /* Asegurar que las imágenes SharePoint sean clickeables */
    .lazy-image[data-sharepoint-url] {
        cursor: pointer !important;
        opacity: 1 !important;
        transition: all 0.3s ease;
    }

        .lazy-image[data-sharepoint-url]:hover {
            transform: scale(1.02);
            filter: brightness(1.1);
        }

    /* Debug temporal: borde para identificar imágenes SharePoint */
    .image-container.sharepoint-image .lazy-image {
        border: 2px solid #2196f3 !important;
    }

    /* Asegurar visibilidad del modal */
    .image-modal.show {
        display: flex !important;
        opacity: 1 !important;
    }
    /* ===== MODAL DE ZOOM COMPLETO ===== */
    .image-modal {
        display: none;
        position: fixed;
        z-index: 9999;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.95);
        backdrop-filter: blur(5px);
        opacity: 0;
        transition: opacity 0.3s ease;
    }

        .image-modal.show {
            display: flex !important;
            opacity: 1;
        }

    .modal-content-zoom {
        position: relative;
        margin: auto;
        width: 90%;
        height: 90%;
        display: flex;
        align-items: center;
        justify-content: center;
        overflow: hidden;
    }

    .zoom-container {
        position: relative;
        width: 100%;
        height: 100%;
        overflow: hidden;
        cursor: grab;
        display: flex;
        align-items: center;
        justify-content: center;
    }

        .zoom-container:active {
            cursor: grabbing;
        }

    .modal-image-zoom {
        max-width: 100%;
        max-height: 100%;
        object-fit: contain;
        transition: transform 0.3s ease;
        user-select: none;
        -webkit-user-drag: none;
    }

    /* Controles del modal */
    .modal-controls {
        position: absolute;
        top: 20px;
        right: 20px;
        display: flex;
        gap: 10px;
        z-index: 10001;
    }

    .modal-control-btn {
        background: rgba(255, 255, 255, 0.2);
        border: 1px solid rgba(255, 255, 255, 0.3);
        color: white;
        padding: 10px;
        border-radius: 50%;
        cursor: pointer;
        transition: all 0.3s ease;
        backdrop-filter: blur(10px);
        font-size: 16px;
        width: 45px;
        height: 45px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

        .modal-control-btn:hover {
            background: rgba(255, 255, 255, 0.3);
            border-color: rgba(255, 255, 255, 0.5);
            transform: scale(1.1);
        }

        .modal-control-btn:disabled {
            opacity: 0.5;
            cursor: not-allowed;
            transform: none;
        }

    /* Información de la imagen */
    .image-info {
        position: absolute;
        bottom: 20px;
        left: 20px;
        background: rgba(0, 0, 0, 0.8);
        color: white;
        padding: 15px 20px;
        border-radius: 8px;
        backdrop-filter: blur(10px);
        max-width: 300px;
    }

    /* Indicador de zoom */
    .zoom-indicator {
        position: absolute;
        top: 20px;
        left: 20px;
        background: rgba(0, 0, 0, 0.8);
        color: white;
        padding: 8px 12px;
        border-radius: 20px;
        font-size: 14px;
        backdrop-filter: blur(10px);
    }

    /* Controles de zoom */
    .zoom-controls {
        position: absolute;
        bottom: 20px;
        right: 20px;
        display: flex;
        gap: 5px;
        background: rgba(0, 0, 0, 0.8);
        padding: 10px;
        border-radius: 25px;
        backdrop-filter: blur(10px);
    }

    .zoom-btn {
        background: rgba(255, 255, 255, 0.2);
        border: none;
        color: white;
        padding: 8px 12px;
        border-radius: 20px;
        cursor: pointer;
        transition: all 0.3s ease;
        font-size: 14px;
        display: flex;
        align-items: center;
        gap: 5px;
    }

        .zoom-btn:hover {
            background: rgba(255, 255, 255, 0.3);
            transform: scale(1.05);
        }

    /* Galería de navegación */
    .image-gallery-nav {
        position: absolute;
        bottom: 80px;
        left: 50%;
        transform: translateX(-50%);
        display: flex;
        gap: 10px;
        background: rgba(0, 0, 0, 0.8);
        padding: 10px;
        border-radius: 10px;
        backdrop-filter: blur(10px);
        max-width: 90%;
        overflow-x: auto;
        scrollbar-width: thin;
        scrollbar-color: rgba(255,255,255,0.3) transparent;
    }

        .image-gallery-nav::-webkit-scrollbar {
            height: 6px;
        }

        .image-gallery-nav::-webkit-scrollbar-track {
            background: rgba(255,255,255,0.1);
            border-radius: 3px;
        }

        .image-gallery-nav::-webkit-scrollbar-thumb {
            background: rgba(255,255,255,0.3);
            border-radius: 3px;
        }

    .gallery-thumb {
        width: 60px;
        height: 45px;
        object-fit: cover;
        border-radius: 4px;
        cursor: pointer;
        opacity: 0.6;
        transition: all 0.3s ease;
        border: 2px solid transparent;
        flex-shrink: 0;
    }

        .gallery-thumb:hover,
        .gallery-thumb.active {
            opacity: 1;
            border-color: #007bff;
            transform: scale(1.1);
        }

    /* Ayuda de controles */
    .controls-help {
        position: absolute;
        top: 80px;
        left: 20px;
        background: rgba(0, 0, 0, 0.8);
        color: white;
        padding: 10px 15px;
        border-radius: 8px;
        backdrop-filter: blur(10px);
        font-size: 12px;
        opacity: 0;
        transition: opacity 0.3s ease;
        pointer-events: none;
    }

    .image-modal:hover .controls-help {
        opacity: 1;
    }
    .lazy-image:not([data-sharepoint-url]) {
        opacity: 1 !important;
    }
    /* BOTONES DE SUSTITUCIÓN */
    .image-overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.7);
        display: flex;
        align-items: center;
        justify-content: center;
        opacity: 0;
        visibility: hidden;
        transition: all 0.3s ease;
        z-index: 15;
        flex-direction: column;
        gap: 8px;
    }

    .image-container:hover .image-overlay {
        opacity: 1;
        visibility: visible;
    }

    .overlay-btn {
        backdrop-filter: blur(5px);
        border: 1px solid rgba(255,255,255,0.3);
        font-size: 0.8rem;
        min-width: 100px;
    }
    /* MODAL DE SUSTITUCIÓN */
    .modal-sustitucion {
        display: none;
        position: fixed;
        z-index: 11000;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.8);
        backdrop-filter: blur(5px);
    }

    .modal-content-sustitucion {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background: white;
        border-radius: 15px;
        width: 90%;
        max-width: 500px;
        box-shadow: 0 10px 30px rgba(0,0,0,0.3);
    }

    .modal-header-sustitucion {
        background: linear-gradient(135deg, #ff6b6b, #ee5a24);
        color: white;
        padding: 20px;
        border-radius: 15px 15px 0 0;
        position: relative;
    }

    .btn-close-sustitucion {
        position: absolute;
        top: 15px;
        right: 20px;
        background: rgba(255,255,255,0.2);
        border: none;
        color: white;
        width: 35px;
        height: 35px;
        border-radius: 50%;
        cursor: pointer;
    }

    .modal-body-sustitucion {
        padding: 30px;
    }

    .info-actual {
        background: linear-gradient(135deg, #e3f2fd, #f3e5f5);
        border: 1px solid #2196f3;
        border-radius: 10px;
        padding: 20px;
        margin-bottom: 25px;
    }

    .upload-area {
        border: 2px dashed #007bff;
        border-radius: 10px;
        padding: 30px;
        text-align: center;
        background: #f8f9fa;
        cursor: pointer;
        transition: all 0.3s ease;
    }

        .upload-area:hover {
            border-color: #0056b3;
            background: #e3f2fd;
            transform: translateY(-2px);
        }

    .file-input-hidden {
        display: none;
    }
</style>

<!-- ESTILOS RESPONSIVOS MOVIDOS AL FINAL DEL SCRIPT -->

<div class="details-container">
    <div class="details-header">
        <h2>
            @ViewData["Title"]: Folio @Model.LiquidacionDetalle?.Folio

            <!-- NUEVO: Indicador de origen de datos -->
            @if (Model.OrigenDatos == "Base de Datos")
            {
                <span class="data-source-indicator source-database">
                    <i class="fas fa-database me-1"></i>Base de Datos
                </span>
            }
            else if (Model.OrigenDatos == "SharePoint")
            {
                <span class="data-source-indicator source-sharepoint">
                    <i class="fab fa-microsoft me-1"></i>SharePoint
                </span>
            }
        </h2>

        <!-- DIAGNÓSTICO DE RENDIMIENTO (temporal) -->
        @if (!string.IsNullOrEmpty(Model.DiagnosticoTiempos))
        {
            <div class="alert performance-info mt-2 py-2">
                <i class="fas fa-tachometer-alt"></i> <strong>Rendimiento:</strong> @Model.DiagnosticoTiempos
            </div>
        }
    </div>

    @if (!string.IsNullOrEmpty(Model.ErrorMessage))
    {
        <div class="alert alert-danger error-message">
            @Model.ErrorMessage

            <!-- NUEVO: Sugerencia para SharePoint -->
            @if (!Model.BusquedaEnSharePoint)
            {
                <hr>
                <p class="mb-0">
                    <strong>Nota:</strong> El sistema también verificó automáticamente en SharePoint.
                </p>
            }
        </div>
    }
    else if (Model.LiquidacionDetalle != null)
    {
        <h4>Información del Viaje</h4>
        <hr />
        <dl class="row details-section">
            <dt class="col-sm-3">Folio:</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.LiquidacionDetalle.Folio)</dd>
            <dt class="col-sm-3">Cliente:</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.LiquidacionDetalle.Cliente)</dd>
            <dt class="col-sm-3">Tractor:</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.LiquidacionDetalle.Tractor)</dd>
            <dt class="col-sm-3">Remolque:</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.LiquidacionDetalle.Remolque)</dd>
            <dt class="col-sm-3">Fecha de Salida:</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.LiquidacionDetalle.FechaSalida)</dd>
            <dt class="col-sm-3">Origen:</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.LiquidacionDetalle.Origen)</dd>
            <dt class="col-sm-3">Destino:</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.LiquidacionDetalle.Destino)</dd>
            <dt class="col-sm-3">Conductor:</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.LiquidacionDetalle.DriverName)</dd>
            <dt class="col-sm-3">Status:</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.StatusText)</dd>
            <dt class="col-sm-3">Fecha de Captura (POD):</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.LiquidacionDetalle.CaptureDate)</dd>
        </dl>

        <h4>
            Evidencias Fotográficas
            @if (Model.EvidenciasInfo?.Any() == true)
            {
                <small class="text-muted">(@Model.EvidenciasInfo.Count archivo(s))</small>
                <small class="text-info ms-2"><i class="fas fa-info-circle"></i> Click en cualquier imagen para ampliar</small>
            }

            <!-- NUEVO: Mostrar origen de las evidencias -->
            @if (Model.OrigenDatos.Contains("SharePoint"))
            {
                @if (Model.OrigenDatos == "BD + SharePoint")
                {
                    <small class="ms-2">
                        <span class="data-source-indicator source-database">
                            <i class="fas fa-database me-1"></i>BD
                        </span>
                        <span class="data-source-indicator source-sharepoint">
                            <i class="fab fa-microsoft me-1"></i>Evidencias SP
                        </span>
                    </small>
                }
                else if (Model.OrigenDatos == "SharePoint")
                {
                    <small class="ms-2">
                        <span class="data-source-indicator source-sharepoint">
                            <i class="fab fa-microsoft me-1"></i>Todo desde SharePoint
                        </span>
                    </small>
                }
            }
        </h4>
       <hr />

        @if (Model.EvidenciasInfo?.Any() == true)
        {
            <div class="images-gallery">
                @foreach (var evidencia in Model.EvidenciasInfo)
                {
                    <div class="image-container @(evidencia.IsFromSharePoint ? "sharepoint-image" : "")"
                         data-evidencia-id="@evidencia.EvidenciaID"
                         data-is-sharepoint="@evidencia.IsFromSharePoint.ToString().ToLower()">
                        <!-- NUEVO: Overlay para botones -->
                        <div class="image-overlay">
                            <button class="btn btn-light btn-sm overlay-btn" onclick="ampliarImagen(this)" title="Ver imagen completa">
                                <i class="fas fa-search-plus"></i> Ampliar
                            </button>
                            <button class="btn btn-warning btn-sm overlay-btn" onclick="abrirModalSustitucion(@evidencia.EvidenciaID, '@evidencia.FileName', @evidencia.IsFromSharePoint.ToString().ToLower())" title="Sustituir archivo">
                                <i class="fas fa-exchange-alt"></i> Sustituir
                            </button>
                        </div>
                        <!-- Overlay para imágenes de SharePoint -->
                        @if (evidencia.IsFromSharePoint)
                        {
                            <div class="sharepoint-overlay">
                                <i class="fab fa-microsoft"></i> SP
                            </div>
                        }

                        @if (evidencia.HasImage)
                        {
                            @* IMAGEN DE BASE DE DATOS *@
                            @if (!evidencia.IsFromSharePoint)
                            {
                                <img class="lazy-image"
                                     src="@Url.Page("./Detalles", "Image", new { evidenciaId = evidencia.EvidenciaID })"
                                     data-filename="@evidencia.FileName"
                                     data-capture-date="@(evidencia.CaptureDate?.ToString("dd/MM/yyyy HH:mm") ?? "")"
                                     alt="@evidencia.FileName"
                                     title="@evidencia.FileName - Base de datos (Click para ampliar)" />
                            }
                            @* IMAGEN DE SHAREPOINT - URL CORREGIDA *@
                            @if (evidencia.IsFromSharePoint && !string.IsNullOrEmpty(evidencia.CarpetaSharePoint))
                            {
                                <img class="lazy-image loaded"
                                     src="@($"?handler=SharePointImage&carpeta={Uri.EscapeDataString(evidencia.CarpetaSharePoint)}&fileName={Uri.EscapeDataString(evidencia.FileName)}")" data-filename="@evidencia.FileName"
                                     data-capture-date="@(evidencia.CaptureDate?.ToString("dd/MM/yyyy HH:mm") ?? "")"
                                     data-sharepoint-url="@evidencia.SharePointUrl"
                                     alt="@evidencia.FileName"
                                     title="@evidencia.FileName - SharePoint (Click para ampliar)"
                                     style="opacity: 1;"
                                     onload="console.log('✅ Imagen SharePoint cargada:', this.src)"
                                     onerror="console.error('❌ Error cargando imagen SharePoint:', this.src)" />
                            }
                            @* FALLBACK: PROBLEMA CON SHAREPOINT *@
                            else if (evidencia.IsFromSharePoint && string.IsNullOrEmpty(evidencia.CarpetaSharePoint))
                            {
                                <div class="image-placeholder">
                                    <div>
                                        <i class="fas fa-exclamation-triangle text-warning"></i><br />
                                        <small>@evidencia.FileName</small><br />
                                        <small class="text-warning">Error: Sin ruta de carpeta</small><br />
                                        @if (!string.IsNullOrEmpty(evidencia.SharePointUrl))
                                        {
                                            <a href="@evidencia.SharePointUrl" target="_blank" class="btn btn-sm btn-outline-primary mt-2">
                                                <i class="fab fa-microsoft"></i> Ver en SharePoint
                                            </a>
                                        }
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            @* SIN IMAGEN DISPONIBLE *@
                            <div class="image-placeholder">
                                <div>
                                    <i class="fas fa-image"></i><br />
                                    <small>@evidencia.FileName</small><br />
                                    @if (evidencia.CaptureDate.HasValue)
                                    {
                                        <small class="text-muted">@evidencia.CaptureDate.Value.ToString("dd/MM/yyyy")</small>
                                        <br />
                                    }
                                    @if (evidencia.IsFromSharePoint)
                                    {
                                        <small class="text-info">
                                            <i class="fab fa-microsoft"></i> Archivo SharePoint
                                        </small>
                                        @if (!string.IsNullOrEmpty(evidencia.SharePointUrl))
                                        {
                                            <br />
                                            <a href="@evidencia.SharePointUrl" target="_blank" class="btn btn-sm btn-outline-primary mt-2">
                                                <i class="fas fa-external-link-alt"></i> Abrir en SharePoint
                                            </a>
                                        }
                                    }
                                    else
                                    {
                                        <small class="text-muted">(No disponible)</small>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                }
            </div>
        }
        else
        {
            <p class="no-images">
                No hay imágenes de evidencia para esta liquidación
                @if (Model.BusquedaEnSharePoint)
                {
                    <span>(verificado también en SharePoint)</span>
                }
                .
            </p>
        }
    }
    else if (string.IsNullOrEmpty(Model.ErrorMessage))
    {
        <div class="text-center py-5">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Cargando...</span>
            </div>
            <p class="mt-3">Cargando detalles de la liquidación...</p>
            <small class="text-muted">Buscando en base de datos y SharePoint...</small>
        </div>
    }

    <div style="margin-top: 20px;">
        <a asp-page="./Index" class="btn btn-secondary">
            <i class="fas fa-arrow-left"></i> Volver al Listado
        </a>
        @if (Model.LiquidacionDetalle != null && Model.LiquidacionDetalle.POD_ID > 0)
        {
            <a asp-page="./GenerarPDF" asp-route-id="@Model.LiquidacionDetalle.POD_ID" class="btn btn-danger ms-2" target="_blank">
                <i class="fas fa-file-pdf"></i> Generar PDF
            </a>
        }

        <!-- NUEVO: Botón para ver en SharePoint -->
        @if (Model.OrigenDatos == "SharePoint" && Model.EvidenciasInfo?.Any(e => !string.IsNullOrEmpty(e.SharePointUrl)) == true)
        {
            <a href="@Model.EvidenciasInfo.FirstOrDefault(e => !string.IsNullOrEmpty(e.SharePointUrl))?.SharePointUrl" target="_blank" class="btn btn-primary ms-2">
                <i class="fab fa-microsoft"></i> Ver en SharePoint
            </a>
        }
    </div>
</div>

<!-- El resto del modal y scripts se mantienen exactamente igual -->
<!-- MODAL DE ZOOM COMPLETO CON ROTACIÓN -->
<div id="imageModal" class="image-modal">
    <!-- Controles superiores -->
    <div class="modal-controls">
        <button class="modal-control-btn" onclick="previousImage()" title="Imagen anterior (← o flecha izquierda)" id="prevBtn">
            <i class="fas fa-chevron-left"></i>
        </button>
        <button class="modal-control-btn" onclick="nextImage()" title="Siguiente imagen (→ o flecha derecha)" id="nextBtn">
            <i class="fas fa-chevron-right"></i>
        </button>
        <button class="modal-control-btn" onclick="downloadImage()" title="Descargar imagen">
            <i class="fas fa-download"></i>
        </button>
        <button class="modal-control-btn" onclick="closeModal()" title="Cerrar (ESC)">
            <i class="fas fa-times"></i>
        </button>
    </div>

    <!-- Ayuda de controles actualizada -->
    <div class="controls-help">
        <div><strong>Controles:</strong></div>
        <div>🖱️ Rueda: Zoom</div>
        <div>🖱️ Arrastrar: Mover</div>
        <div>⌨️ +/- : Zoom</div>
        <div>⌨️ ← → : Navegar</div>
        <div>⌨️ R/L : Rotar</div>
        <div>⌨️ 0 : Auto-centrar</div>
    </div>

    <!-- Indicador de zoom -->
    <div class="zoom-indicator" id="zoomIndicator">
        Zoom: 100%
    </div>

    <!-- Contenedor principal -->
    <div class="modal-content-zoom">
        <div class="zoom-container" id="zoomContainer">
            <img id="modalImage" class="modal-image-zoom" src="" alt="">
        </div>
    </div>

    <!-- Información de la imagen -->
    <div class="image-info" id="imageInfo">
        <div><strong id="imageName">Evidencia fotográfica</strong></div>
        <div><small id="imageDetails">Información de la imagen</small></div>
    </div>

    <!-- Controles de zoom -->
    <div class="zoom-controls">
        <button class="zoom-btn" onclick="zoomOut()" title="Zoom Out (-)">
            <i class="fas fa-search-minus"></i>
        </button>
        <button class="zoom-btn" onclick="resetZoom()" title="Tamaño original (0)">
            <i class="fas fa-expand-arrows-alt"></i>
        </button>
        <button class="zoom-btn" onclick="zoomIn()" title="Zoom In (+)">
            <i class="fas fa-search-plus"></i>
        </button>
    </div>

    <!-- CONTROLES DE ROTACIÓN (NUEVO) -->
    <div class="rotation-controls">
        <button class="rotation-btn" onclick="rotateLeft()" title="Rotar izquierda (L)">
            <i class="fas fa-undo"></i>
        </button>
        <button class="rotation-btn" onclick="resetRotation()" title="Resetear rotación">
            <i class="fas fa-compass"></i>
        </button>
        <button class="rotation-btn" onclick="rotateRight()" title="Rotar derecha (R)">
            <i class="fas fa-redo"></i>
        </button>
    </div>

    <!-- Navegación por galería -->
    <div class="image-gallery-nav" id="galleryNav">
        <!-- Se llenarán dinámicamente -->
    </div>
</div>
<!-- MODAL DE SUSTITUCIÓN -->
<div id="modalSustitucion" class="modal-sustitucion">
    <div class="modal-content-sustitucion">
        <!-- HEADER -->
        <div class="modal-header-sustitucion">
            <h5><i class="fas fa-exchange-alt me-2"></i>Sustituir Imagen/PDF</h5>
            <button type="button" class="btn-close-sustitucion" onclick="cerrarModalSustitucion()">
                <i class="fas fa-times"></i>
            </button>
        </div>

        <!-- BODY -->
        <div class="modal-body-sustitucion">
            <!-- INFO ACTUAL -->
            <div class="info-actual">
                <h6><i class="fas fa-info-circle me-2"></i>Archivo Actual</h6>
                <div class="row align-items-center">
                    <div class="col-md-4">
                        <img id="imagenActualPreview" style="max-width: 150px; max-height: 120px; border-radius: 8px;" src="" alt="Imagen actual">
                    </div>
                    <div class="col-md-8">
                        <div><strong>Nombre:</strong> <span id="nombreActual">-</span></div>
                        <div><strong>Origen:</strong> <span id="origenActual">-</span></div>
                        <div><strong>Fecha:</strong> <span id="fechaActual">-</span></div>
                    </div>
                </div>
            </div>

            <!-- SUBIDA -->
            <div id="uploadArea" class="upload-area" onclick="document.getElementById('archivoInput').click()">
                <i class="fas fa-cloud-upload-alt" style="font-size: 3rem; color: #007bff; margin-bottom: 15px;"></i>
                <h5>Seleccionar nuevo archivo</h5>
                <p class="mb-0">JPG, PNG, GIF, PDF - Máximo 10 MB</p>
            </div>

            <input type="file" id="archivoInput" class="file-input-hidden" accept=".jpg,.jpeg,.png,.gif,.pdf">
        </div>

        <!-- FOOTER -->
        <div style="padding: 20px 30px; border-top: 1px solid #eee; display: flex; justify-content: space-between;">
            <button type="button" onclick="cerrarModalSustitucion()" class="btn btn-secondary">
                Cancelar
            </button>
            <button type="button" id="btnSustituir" onclick="alert('Próximamente: handler del servidor')" disabled class="btn btn-success">
                <i class="fas fa-exchange-alt me-1"></i> Sustituir Archivo
            </button>
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // CSS dinámico con escape correcto para Razor
    const style = document.createElement('style');
    style.textContent = `
        @@keyframes spin {
            0% { transform: translate(-50%, -50%) rotate(0deg); }
            100% { transform: translate(-50%, -50%) rotate(360deg); }
        }
        @@media (max-width: 768px) {
            .modal-controls { top: 10px; right: 10px; gap: 5px; }
            .modal-control-btn { width: 40px; height: 40px; font-size: 14px; }
            .rotation-controls { bottom: 60px; right: 10px; }
        }
        .rotation-controls {
            position: absolute; bottom: 80px; right: 20px; display: flex;
            flex-direction: column; gap: 5px; background: rgba(0, 0, 0, 0.8);
            padding: 8px; border-radius: 20px; backdrop-filter: blur(10px);
        }
        .rotation-btn {
            background: rgba(255, 255, 255, 0.2); border: none; color: white;
            padding: 8px; border-radius: 50%; cursor: pointer; transition: all 0.3s ease;
            font-size: 14px; width: 35px; height: 35px; display: flex;
            align-items: center; justify-content: center;
        }
        .rotation-btn:hover { background: rgba(255, 255, 255, 0.3); transform: scale(1.1); }
        .modal-image-zoom {
            max-width: 100%; max-height: 100%; object-fit: contain;
            transition: transform 0.3s ease; user-select: none;
            -webkit-user-drag: none; transform-origin: center center;
        }
    `;
    document.head.appendChild(style);

    // Variables globales
    let currentZoom = 1;
    let currentImageIndex = 0;
    let currentRotation = 0;
    let images = [];
    let isDragging = false;
    let startX, startY, translateX = 0, translateY = 0;

    // Función de inicialización de galería
    function initializeImageGallery() {
        images = Array.from(document.querySelectorAll('.lazy-image')).filter(img => {
            const isBDLoaded = !img.hasAttribute('data-sharepoint-url') && img.src && img.src !== '' && img.src !== window.location.href;
            const isSharePoint = img.hasAttribute('data-sharepoint-url');
            return isBDLoaded || isSharePoint;
        });

        console.log('Galería inicializada con ' + images.length + ' imágenes:', {
            total: images.length,
            sharepoint: images.filter(img => img.hasAttribute('data-sharepoint-url')).length,
            database: images.filter(img => !img.hasAttribute('data-sharepoint-url')).length
        });

        createGalleryNavigation();
    }

    // Crear navegación
    function createGalleryNavigation() {
        const galleryNav = document.getElementById('galleryNav');
        if (!galleryNav) return;
        galleryNav.innerHTML = '';
        images.forEach((img, index) => {
            const thumb = document.createElement('img');
            thumb.src = img.src;
            thumb.className = 'gallery-thumb';
            thumb.onclick = () => goToImage(index);
            thumb.title = img.alt || 'Evidencia ' + (index + 1);
            galleryNav.appendChild(thumb);
        });
    }

    // Auto-centrar imagen
    function autoFitImage() {
        const modalImg = document.getElementById('modalImage');
        const container = document.getElementById('zoomContainer');
        if (!modalImg || !container) return;
        currentZoom = 1;
        translateX = 0;
        translateY = 0;
        if (modalImg.complete) {
            calculateOptimalZoom();
        } else {
            modalImg.onload = () => calculateOptimalZoom();
        }
    }

    // Calcular zoom óptimo
    function calculateOptimalZoom() {
        const modalImg = document.getElementById('modalImage');
        const container = document.getElementById('zoomContainer');
        if (!modalImg || !container) return;
        const containerRect = container.getBoundingClientRect();
        let effectiveWidth = modalImg.naturalWidth;
        let effectiveHeight = modalImg.naturalHeight;
        if (currentRotation === 90 || currentRotation === 270) {
            effectiveWidth = modalImg.naturalHeight;
            effectiveHeight = modalImg.naturalWidth;
        }
        const scaleX = (containerRect.width * 0.85) / effectiveWidth;
        const scaleY = (containerRect.height * 0.85) / effectiveHeight;
        currentZoom = Math.min(scaleX, scaleY, 1);
        translateX = 0;
        translateY = 0;
        applyZoom();
    }

    // Funciones globales de zoom
    window.zoomIn = () => { currentZoom = Math.min(currentZoom * 1.5, 5); applyZoom(); };
    window.zoomOut = () => { currentZoom = Math.max(currentZoom / 1.5, 0.2); applyZoom(); };
    window.resetZoom = () => autoFitImage();

    // Aplicar zoom
    function applyZoom() {
        const modalImg = document.getElementById('modalImage');
        if (modalImg) {
            modalImg.style.transform = 'translate(' + translateX + 'px, ' + translateY + 'px) scale(' + currentZoom + ') rotate(' + currentRotation + 'deg)';
            const indicator = document.getElementById('zoomIndicator');
            if (indicator) {
                indicator.textContent = 'Zoom: ' + Math.round(currentZoom * 100) + '% | Rotación: ' + currentRotation + '°';
            }
        }
    }

    // Funciones de rotación
    window.rotateLeft = () => { currentRotation = (currentRotation - 90 + 360) % 360; autoFitImage(); };
    window.rotateRight = () => { currentRotation = (currentRotation + 90) % 360; autoFitImage(); };
    window.resetRotation = () => { currentRotation = 0; autoFitImage(); };

    // Navegación
    window.previousImage = () => { 
        if (images.length === 0) return; 
        currentImageIndex = (currentImageIndex - 1 + images.length) % images.length; 
        goToImage(currentImageIndex); 
    };
    window.nextImage = () => { 
        if (images.length === 0) return; 
        currentImageIndex = (currentImageIndex + 1) % images.length; 
        goToImage(currentImageIndex); 
    };

    function goToImage(index) {
        currentImageIndex = index;
        const modalImg = document.getElementById('modalImage');
        if (modalImg && images[index]) {
            modalImg.src = images[index].src;
            modalImg.alt = images[index].alt;
            currentRotation = 0;
            updateImageInfo(images[index]);
            updateGalleryNavigation();
            updateNavigationButtons();
            autoFitImage();
        }
    }

    // Actualizar información
    function updateImageInfo(imgElement) {
        const nameEl = document.getElementById('imageName');
        const detailsEl = document.getElementById('imageDetails');
        if (nameEl) {
            nameEl.textContent = imgElement.getAttribute('data-filename') || imgElement.alt || 'Evidencia fotográfica';
        }
        if (detailsEl) {
            let details = 'Imagen ' + (currentImageIndex + 1) + ' de ' + images.length;
            const captureDate = imgElement.getAttribute('data-capture-date');
            if (captureDate) details += ' • Capturada: ' + captureDate;
            const isSharePoint = imgElement.getAttribute('data-sharepoint-url');
            details += isSharePoint ? ' • SharePoint' : ' • Base de Datos';
            detailsEl.textContent = details;
        }
    }

    // Actualizar navegación de galería
    function updateGalleryNavigation() {
        document.querySelectorAll('.gallery-thumb').forEach((thumb, index) => {
            thumb.classList.toggle('active', index === currentImageIndex);
        });
        const activeThumb = document.querySelector('.gallery-thumb.active');
        if (activeThumb) {
            activeThumb.scrollIntoView({ behavior: 'smooth', block: 'nearest', inline: 'center' });
        }
    }

    // Actualizar botones
    function updateNavigationButtons() {
        const prevBtn = document.getElementById('prevBtn');
        const nextBtn = document.getElementById('nextBtn');
        if (prevBtn) prevBtn.disabled = images.length <= 1;
        if (nextBtn) nextBtn.disabled = images.length <= 1;
    }

    // Funciones globales del modal
    window.downloadImage = function() {
        const modalImg = document.getElementById('modalImage');
        if (modalImg && modalImg.src) {
            const link = document.createElement('a');
            link.href = modalImg.src;
            const filename = modalImg.getAttribute('data-filename') || modalImg.alt || 'evidencia';
            link.download = filename;
            link.click();
        }
    };

    window.closeModal = function() {
        const modal = document.getElementById('imageModal');
        if (modal) {
            modal.classList.remove('show');
            setTimeout(() => {
                modal.style.display = 'none';
                document.body.style.overflow = 'auto';
                currentRotation = 0;
                currentZoom = 1;
                translateX = 0;
                translateY = 0;
            }, 300);
        }
    };

    // Eventos de arrastre
    const zoomContainer = document.getElementById('zoomContainer');
    if (zoomContainer) {
        zoomContainer.addEventListener('mousedown', (e) => {
            if (currentZoom > 0.5) {
                isDragging = true;
                startX = e.clientX - translateX;
                startY = e.clientY - translateY;
                e.preventDefault();
            }
        });
        document.addEventListener('mousemove', (e) => {
            if (isDragging) {
                translateX = e.clientX - startX;
                translateY = e.clientY - startY;
                applyZoom();
            }
        });
        document.addEventListener('mouseup', () => { isDragging = false; });
        zoomContainer.addEventListener('wheel', (e) => {
            e.preventDefault();
            if (e.deltaY < 0) zoomIn(); else zoomOut();
        });
    }

    // Eventos de teclado
    document.addEventListener('keydown', (e) => {
        const modal = document.getElementById('imageModal');
        if (modal && modal.classList.contains('show')) {
            switch(e.key) {
                case 'Escape': closeModal(); break;
                case 'ArrowLeft': previousImage(); break;
                case 'ArrowRight': nextImage(); break;
                case '+': case '=': e.preventDefault(); zoomIn(); break;
                case '-': e.preventDefault(); zoomOut(); break;
                case '0': e.preventDefault(); resetZoom(); break;
                case 'r': case 'R': e.preventDefault(); rotateRight(); break;
                case 'l': case 'L': e.preventDefault(); rotateLeft(); break;
            }
        }
    });

    // Cerrar modal al hacer clic fuera
    const modal = document.getElementById('imageModal');
    if (modal) {
        modal.addEventListener('click', (e) => {
            if (e.target === modal) closeModal();
        });
    }

    // EVENT LISTENER DE CLICK PRINCIPAL
    document.addEventListener('click', function(e) {
    const isValidImage = e.target.classList.contains('lazy-image') &&
        ((e.target.src && e.target.src !== '' && e.target.src !== window.location.href) || e.target.hasAttribute('data-sharepoint-url'));
        
        if (isValidImage) {
            e.preventDefault();
            e.stopPropagation();
            
            console.log('CLICK DETECTADO en:', e.target.getAttribute('data-filename'));
            
            initializeImageGallery();
            
            const clickedIndex = images.findIndex(img => img.src === e.target.src);
            console.log('Índice encontrado:', clickedIndex);
            
            if (clickedIndex !== -1) {
                currentImageIndex = clickedIndex;
                
                const modal = document.getElementById('imageModal');
                const modalImg = document.getElementById('modalImage');
                
                if (modal && modalImg) {
                    modalImg.src = e.target.src;
                    modalImg.alt = e.target.alt;
                    
                    modalImg.setAttribute('data-filename', e.target.getAttribute('data-filename') || '');
                    modalImg.setAttribute('data-capture-date', e.target.getAttribute('data-capture-date') || '');
                    modalImg.setAttribute('data-sharepoint-url', e.target.getAttribute('data-sharepoint-url') || '');
                    
                    currentRotation = 0;
                    
                    updateImageInfo(e.target);
                    updateGalleryNavigation();
                    updateNavigationButtons();
                    
                    modal.style.display = 'flex';
                    setTimeout(() => {
                        modal.classList.add('show');
                        setTimeout(() => autoFitImage(), 50);
                    }, 10);
                    
                    document.body.style.overflow = 'hidden';
                    console.log('MODAL ABIERTO para:', e.target.getAttribute('data-filename'));
                }
            } else {
                console.error('ERROR: Imagen no encontrada en array');
            }
        }
    });

    // Intersection Observer para lazy loading
    const imageObserver = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                const lazyImage = entry.target.querySelector('.lazy-image');
                if (lazyImage && !lazyImage.classList.contains('loaded') && !lazyImage.hasAttribute('data-sharepoint-url')) {
                    lazyImage.onload = () => {
                        lazyImage.classList.add('loaded');
                        setTimeout(initializeImageGallery, 100);
                    };
                    if (lazyImage.dataset.src) {
                        lazyImage.src = lazyImage.dataset.src;
                    }
                    imageObserver.unobserve(entry.target);
                }
            }
        });
    }, { rootMargin: '50px 0px', threshold: 0.1 });

    document.querySelectorAll('.image-container').forEach(container => {
        imageObserver.observe(container);
    });

    // Inicialización final con debug completo
    setTimeout(() => {
        console.log('=== INICIALIZANDO SISTEMA ===');
        
        initializeImageGallery();
        
        const totalImages = document.querySelectorAll('.lazy-image').length;
        const sharePointImages = document.querySelectorAll('.lazy-image[data-sharepoint-url]').length;
        const loadedImages = document.querySelectorAll('.lazy-image.loaded').length;
        
        console.log('Estado del sistema:', {
            total: totalImages,
            sharepoint: sharePointImages,
            loaded: loadedImages,
            clickeables: images.length
        });
        
        // Debug visual y click test para SharePoint
        document.querySelectorAll('.lazy-image[data-sharepoint-url]').forEach((img, index) => {
            img.style.border = '3px solid red';
            img.style.cursor = 'pointer';
            img.style.opacity = '1';
            console.log('Imagen SharePoint', (index + 1) + ':', img.getAttribute('data-filename'));
            
            // Test de click directo
            img.addEventListener('click', function() {
                console.log('CLICK DIRECTO FUNCIONANDO en:', this.getAttribute('data-filename'));
            }, true);
        });
        
        console.log('=== SISTEMA LISTO ===');
        
    }, 1000);

    console.log('Página cargada - Sistema de imágenes iniciado');
});
    // Función temporal para ampliar imagen
    function ampliarImagen(boton) {
        const container = boton.closest('.image-container');
        const imagen = container.querySelector('.lazy-image');
        if (imagen) {
            imagen.click(); // Usar el sistema existente de zoom
        }
    }

        // FUNCIONES DEL MODAL
    let datosActuales = {};

    function abrirModalSustitucion(evidenciaId, nombreArchivo, esSharePoint) {
        console.log('Abriendo modal:', {evidenciaId, nombreArchivo, esSharePoint});

        datosActuales = {evidenciaId, nombreArchivo, esSharePoint};

        // Actualizar info actual
        document.getElementById('nombreActual').textContent = nombreArchivo;
        document.getElementById('origenActual').textContent = esSharePoint ? 'SharePoint' : 'Base de Datos';
        document.getElementById('fechaActual').textContent = 'Cargando...';

        // Mostrar modal
        document.getElementById('modalSustitucion').style.display = 'block';
    }

    function cerrarModalSustitucion() {
        document.getElementById('modalSustitucion').style.display = 'none';
        document.getElementById('btnSustituir').disabled = true;
    }

    // Detectar archivo seleccionado
    document.getElementById('archivoInput').addEventListener('change', function(e) {
        if (e.target.files.length > 0) {
            document.getElementById('btnSustituir').disabled = false;
            console.log('Archivo seleccionado:', e.target.files[0].name);
        }
    });
</script>
