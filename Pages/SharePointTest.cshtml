@page
@model ProyectoRH2025.Pages.SharePointTestModel
@{
    ViewData["Title"] = "Pruebas de SharePoint";
}

<style>
    .test-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px;
    }

    .test-card {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        border-radius: 15px;
        padding: 25px;
        margin-bottom: 20px;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);
    }

    .config-display {
        background: rgba(255, 255, 255, 0.1);
        border: 1px solid rgba(255, 255, 255, 0.2);
        border-radius: 10px;
        padding: 20px;
        margin: 15px 0;
        backdrop-filter: blur(10px);
    }

    .config-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 8px 0;
        border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    }

        .config-item:last-child {
            border-bottom: none;
        }

    .config-label {
        font-weight: 500;
        color: rgba(255, 255, 255, 0.9);
    }

    .config-value {
        font-family: 'Courier New', monospace;
        background: rgba(0, 0, 0, 0.2);
        padding: 4px 8px;
        border-radius: 4px;
        font-size: 0.9rem;
        max-width: 300px;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .test-buttons {
        display: flex;
        gap: 15px;
        flex-wrap: wrap;
        margin: 20px 0;
    }

    .btn-test {
        background: rgba(255, 255, 255, 0.2);
        border: 1px solid rgba(255, 255, 255, 0.3);
        color: white;
        padding: 12px 20px;
        border-radius: 8px;
        transition: all 0.3s ease;
        text-decoration: none;
        font-weight: 500;
        cursor: pointer;
    }

        .btn-test:hover {
            background: rgba(255, 255, 255, 0.3);
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
            color: white;
            text-decoration: none;
        }

    .status-message {
        margin: 20px 0;
        padding: 15px;
        border-radius: 8px;
        font-weight: 500;
    }

    .status-success {
        background: rgba(40, 167, 69, 0.2);
        border: 1px solid rgba(40, 167, 69, 0.3);
        color: #28a745;
    }

    .status-error {
        background: rgba(220, 53, 69, 0.2);
        border: 1px solid rgba(220, 53, 69, 0.3);
        color: #dc3545;
    }

    .status-info {
        background: rgba(23, 162, 184, 0.2);
        border: 1px solid rgba(23, 162, 184, 0.3);
        color: #17a2b8;
    }

    .test-results {
        background: rgba(255, 255, 255, 0.05);
        border: 1px solid rgba(255, 255, 255, 0.1);
        border-radius: 10px;
        padding: 20px;
        margin: 20px 0;
    }

    .result-title {
        font-size: 1.1rem;
        font-weight: 600;
        margin-bottom: 10px;
        color: #ffffff;
    }

    .result-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 15px;
    }

    .result-item {
        background: rgba(255, 255, 255, 0.1);
        padding: 12px;
        border-radius: 6px;
        border: 1px solid rgba(255, 255, 255, 0.1);
    }

    .result-key {
        font-size: 0.9rem;
        opacity: 0.8;
        margin-bottom: 4px;
    }

    .result-value {
        font-weight: 500;
        word-break: break-all;
    }

    .file-list {
        background: rgba(255, 255, 255, 0.05);
        border-radius: 8px;
        padding: 15px;
        margin-top: 15px;
    }

    .file-item {
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 12px;
        border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        transition: all 0.3s ease;
        cursor: pointer;
        border-radius: 8px;
        margin-bottom: 5px;
    }

        .file-item:hover {
            background: rgba(255, 255, 255, 0.1);
            transform: translateX(5px);
        }

        .file-item:last-child {
            border-bottom: none;
        }

        .file-item.clickable {
            border-left: 4px solid #00ff88;
        }

            .file-item.clickable:hover {
                background: rgba(0, 255, 136, 0.2);
            }

        .file-item.folder {
            border-left: 4px solid #ffd700;
        }

        .file-item.document:hover {
            background: rgba(255, 255, 255, 0.15);
            border-left: 4px solid #007bff;
        }

    .file-info {
        display: flex;
        align-items: center;
        gap: 10px;
        flex: 1;
    }

    .file-icon {
        font-size: 1.4rem;
        opacity: 0.8;
        min-width: 30px;
    }

    .file-details {
        display: flex;
        flex-direction: column;
        flex: 1;
    }

    .file-name {
        font-weight: 500;
        margin-bottom: 2px;
        font-size: 1rem;
    }

    .file-meta {
        font-size: 0.8rem;
        opacity: 0.7;
    }

    .file-actions {
        display: flex;
        gap: 8px;
        align-items: center;
    }

    .action-btn {
        background: rgba(255, 255, 255, 0.2);
        border: none;
        color: white;
        padding: 6px 10px;
        border-radius: 4px;
        cursor: pointer;
        font-size: 0.8rem;
        transition: all 0.2s ease;
    }

        .action-btn:hover {
            background: rgba(255, 255, 255, 0.3);
        }

    .breadcrumb {
        background: rgba(255, 255, 255, 0.1);
        padding: 10px 15px;
        border-radius: 8px;
        margin-bottom: 15px;
        display: none;
    }

    .breadcrumb-item {
        color: white;
        text-decoration: none;
        margin-right: 10px;
        cursor: pointer;
        padding: 4px 8px;
        border-radius: 4px;
        transition: background 0.2s ease;
    }

        .breadcrumb-item:hover {
            background: rgba(255, 255, 255, 0.2);
            text-decoration: none;
        }

    .loading {
        text-align: center;
        padding: 20px;
        display: none;
    }

    .spinner {
        border: 3px solid rgba(255, 255, 255, 0.3);
        border-radius: 50%;
        border-top: 3px solid white;
        width: 30px;
        height: 30px;
        animation: spin 1s linear infinite;
        margin: 0 auto;
    }

    /* MODAL PARA VISTA PREVIA */
    .preview-modal {
        display: none;
        position: fixed;
        z-index: 1000;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.8);
        backdrop-filter: blur(5px);
    }

    .preview-content {
        background: white;
        margin: 2% auto;
        padding: 0;
        border-radius: 15px;
        width: 90%;
        max-width: 1000px;
        height: 90%;
        display: flex;
        flex-direction: column;
        overflow: hidden;
        box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
    }

    .preview-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 15px 20px;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .preview-title {
        font-size: 1.1rem;
        font-weight: 600;
        margin: 0;
    }

    .close-btn {
        background: none;
        border: none;
        color: white;
        font-size: 1.5rem;
        cursor: pointer;
        padding: 5px 10px;
        border-radius: 4px;
        transition: background 0.2s ease;
    }

        .close-btn:hover {
            background: rgba(255, 255, 255, 0.2);
        }

    .preview-body {
        flex: 1;
        padding: 20px;
        overflow-y: auto;
        background: #f8f9fa;
    }

    .preview-info {
        background: white;
        border-radius: 10px;
        padding: 20px;
        margin-bottom: 20px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    .preview-section {
        background: white;
        border-radius: 10px;
        padding: 20px;
        margin-bottom: 15px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

        .preview-section h4 {
            color: #333;
            margin-bottom: 15px;
            font-size: 1rem;
            font-weight: 600;
        }

    .info-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 15px;
    }

    .info-item {
        display: flex;
        flex-direction: column;
    }

    .info-label {
        font-size: 0.8rem;
        color: #666;
        font-weight: 500;
        margin-bottom: 4px;
    }

    .info-value {
        color: #333;
        font-weight: 600;
    }

    .create-folder-section {
        background: rgba(255, 255, 255, 0.1);
        border-radius: 10px;
        padding: 20px;
        margin: 20px 0;
    }

    .form-group {
        margin-bottom: 15px;
    }

    .form-label {
        display: block;
        margin-bottom: 5px;
        font-weight: 500;
    }

    .form-control {
        width: 100%;
        padding: 10px;
        border: 1px solid rgba(255, 255, 255, 0.3);
        border-radius: 6px;
        background: rgba(255, 255, 255, 0.1);
        color: white;
        font-size: 1rem;
    }

        .form-control::placeholder {
            color: rgba(255, 255, 255, 0.6);
        }

    .alert {
        padding: 12px 16px;
        border-radius: 6px;
        margin: 10px 0;
        font-weight: 500;
    }

    .alert-warning {
        background: rgba(255, 193, 7, 0.2);
        border: 1px solid rgba(255, 193, 7, 0.3);
        color: #ffc107;
    }

    @@keyframes spin {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }

    .file-preview {
        background: #f8f9fa;
        border: 1px solid #dee2e6;
        border-radius: 8px;
        padding: 15px;
        margin-top: 10px;
    }

    .simulated-content {
        background: linear-gradient(45deg, #f8f9fa 25%, transparent 25%), linear-gradient(-45deg, #f8f9fa 25%, transparent 25%), linear-gradient(45deg, transparent 75%, #f8f9fa 75%), linear-gradient(-45deg, transparent 75%, #f8f9fa 75%);
        background-size: 20px 20px;
        background-position: 0 0, 0 10px, 10px -10px, -10px 0px;
        min-height: 200px;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 8px;
        color: #6c757d;
        font-style: italic;
    }
</style>

<div class="test-container">
    <!-- HEADER -->
    <div class="test-card">
        <div class="d-flex align-items-center mb-3">
            <i class="fas fa-cloud fa-2x me-3"></i>
            <div>
                <h2 class="mb-0">@ViewData["Title"]</h2>
                <small class="opacity-75">Explorador con vista previa integrada - Sin necesidad de ir a SharePoint</small>
            </div>
        </div>

        <!-- CONFIGURACIÓN ACTUAL -->
        <div class="config-display">
            <h5 class="mb-3">
                <i class="fas fa-cog me-2"></i>Configuración Actual
            </h5>
            <div class="config-item">
                <span class="config-label">Tenant ID:</span>
                <span class="config-value">@ViewData["TenantId"]</span>
            </div>
            <div class="config-item">
                <span class="config-label">Client ID:</span>
                <span class="config-value">@ViewData["ClientId"]</span>
            </div>
            <div class="config-item">
                <span class="config-label">Client Secret:</span>
                <span class="config-value">
                    @if (string.IsNullOrEmpty(ViewData["ClientSecret"]?.ToString()))
                    {
                        <span>❌ NO CONFIGURADO</span>
                    }
                    else
                    {
                        <span>✅ Configurado</span>
                    }
                </span>
            </div>
            <div class="config-item">
                <span class="config-label">Site URL:</span>
                <span class="config-value">@(ViewData["SiteUrl"]?.ToString() ?? "No configurado")</span>
            </div>
        </div>

        @if (string.IsNullOrEmpty(ViewData["ClientSecret"]?.ToString()))
        {
            <div class="alert alert-warning">
                <i class="fas fa-exclamation-triangle me-2"></i>
                <strong>Client Secret requerido:</strong>
                Necesitas generar un Client Secret en Azure AD y agregarlo a appsettings.json
            </div>
        }

        <!-- BOTONES DE PRUEBA -->
        <div class="test-buttons">
            <form method="post" asp-page-handler="TestConnection" style="display: inline;">
                <button type="submit" class="btn-test">
                    <i class="fas fa-plug me-2"></i>Probar Conexión
                </button>
            </form>

            <button type="button" onclick="loadFiles()" class="btn-test">
                <i class="fas fa-folder-open me-2"></i>Explorar SharePoint
            </button>

            <a href="/health" target="_blank" class="btn-test">
                <i class="fas fa-heartbeat me-2"></i>Health Check
            </a>
        </div>
    </div>

    <!-- MENSAJE DE ESTADO -->
    @if (!string.IsNullOrEmpty(Model.StatusMessage))
    {
        var statusClass = "";
        if (Model.StatusMessage.Contains("Conexión exitosa") || Model.StatusMessage.Contains("creada exitosamente"))
        {
            statusClass = "status-success";
        }
        else if (Model.StatusMessage.Contains("Error") || Model.StatusMessage.Contains("Excepción"))
        {
            statusClass = "status-error";
        }
        else
        {
            statusClass = "status-info";
        }

        <div class="status-message @statusClass">
            @Model.StatusMessage
        </div>
    }

    <!-- RESULTADOS DE PRUEBA -->
    @if (Model.TestResult != null)
    {
        <div class="test-card">
            <div class="test-results">
                <div class="result-title">
                    @if (Model.TestResult.IsSuccess)
                    {
                        <i class="fas fa-check-circle text-success me-2"></i>
                        <span>Resultado: Exitoso</span>
                    }
                    else
                    {
                        <i class="fas fa-times-circle text-danger me-2"></i>
                        <span>Resultado: Error</span>
                    }
                </div>

                <p class="mb-3">@Model.TestResult.Message</p>

                @if (!string.IsNullOrEmpty(Model.TestResult.Error))
                {
                    <div class="alert alert-warning">
                        <strong>Error:</strong> @Model.TestResult.Error
                    </div>
                }

                @if (Model.TestResult.Details.Any())
                {
                    <div class="result-title">Detalles de la Conexión:</div>
                    <div class="result-grid">
                        @foreach (var detail in Model.TestResult.Details)
                        {
                            <div class="result-item">
                                <div class="result-key">@detail.Key:</div>
                                <div class="result-value">@detail.Value</div>
                            </div>
                        }
                    </div>
                }
            </div>
        </div>
    }

    <!-- EXPLORADOR DE SHAREPOINT -->
    <div class="test-card">
        <h5 class="mb-3">
            <i class="fas fa-folder me-2"></i>Explorador de SharePoint
            <small class="opacity-75">- Vista previa integrada</small>
        </h5>

        <!-- Breadcrumb para navegación -->
        <div id="breadcrumb" class="breadcrumb">
            <span class="breadcrumb-item" onclick="navigateToRoot()">🏠 Raíz</span>
            <span id="current-path"></span>
        </div>

        <div id="files-container">
            <p style="opacity: 0.8;">
                <i class="fas fa-info-circle me-2"></i>
                Haz click en "Explorar SharePoint" para ver el contenido.
                <br>
                <small>• Click en carpetas para navegar • Click en archivos para vista previa • Click en 🔗 para abrir en SharePoint</small>
            </p>
        </div>

        <div id="loading" class="loading">
            <div class="spinner"></div>
            <p>Cargando contenido...</p>
        </div>
    </div>

    <!-- CREAR CARPETA DE PRUEBA -->
    <div class="test-card">
        <h5 class="mb-3">
            <i class="fas fa-folder-plus me-2"></i>Crear Carpeta de Prueba
        </h5>

        <div class="create-folder-section">
            <form method="post" asp-page-handler="CreateTestFolder">
                <div class="form-group">
                    <label class="form-label">Nombre de la carpeta:</label>
                    <input type="text"
                           name="folderName"
                           class="form-control"
                           placeholder="Ej: Test_Liquidacion_001"
                           value="Test_@DateTime.Now.ToString("yyyyMMdd_HHmmss")" />
                </div>
                <button type="submit" class="btn-test">
                    <i class="fas fa-plus me-2"></i>Crear Carpeta
                </button>
            </form>
        </div>
    </div>
</div>

<!-- MODAL PARA VISTA PREVIA -->
<div id="preview-modal" class="preview-modal">
    <div class="preview-content">
        <div class="preview-header">
            <h3 id="preview-title" class="preview-title">Vista Previa</h3>
            <button class="close-btn" onclick="closePreview()">&times;</button>
        </div>
        <div class="preview-body" id="preview-body">
            <!-- Contenido dinámico -->
        </div>
    </div>
</div>

<script>
    let currentPath = '';
    let allFiles = [];

    async function loadFiles(folderPath = '') {
        const container = document.getElementById('files-container');
        const loading = document.getElementById('loading');

        // Mostrar loading
        loading.style.display = 'block';
        container.innerHTML = '';

        try {
            const response = await fetch('/SharePointTest?handler=GetFiles&folderPath=' + encodeURIComponent(folderPath), {
                method: 'GET',
                headers: {
                    'RequestVerificationToken': document.querySelector('[name="__RequestVerificationToken"]')?.value || ''
                }
            });

            if (response.ok) {
                const files = await response.json();
                allFiles = files;
                currentPath = folderPath;
                displayFiles(files, folderPath);
                updateBreadcrumb(folderPath);
            } else {
                container.innerHTML = '<p style="color: #ff6b6b;">Error al cargar archivos: ' + response.statusText + '</p>';
            }
        } catch (error) {
            container.innerHTML = '<p style="color: #ff6b6b;">Error: ' + error.message + '</p>';
        } finally {
            loading.style.display = 'none';
        }
    }

    function displayFiles(files, folderPath) {
        const container = document.getElementById('files-container');

        if (!files || files.length === 0) {
            container.innerHTML = '<p style="opacity: 0.8;">No se encontraron archivos en esta ubicación.</p>';
            return;
        }

        let html = '';

        files.forEach(file => {
            const isClickableFolder = file.isFolder || file.type === 'folder';
            const isDocument = !isClickableFolder && file.type !== 'status' && file.type !== 'error';
            const icon = getFileIcon(file);
            const clickHandler = isClickableFolder ? `onclick="loadFiles('${folderPath ? folderPath + '/' : ''}${file.name}')"` : '';
            const clickableClass = isClickableFolder ? 'clickable' : (isDocument ? 'document' : '');
            const folderClass = isClickableFolder ? 'folder' : '';

            html += `
                <div class="file-item ${file.type} ${clickableClass} ${folderClass}" ${clickHandler}>
                    <div class="file-info">
                        <span class="file-icon">${icon}</span>
                        <div class="file-details">
                            <div class="file-name">${file.name}</div>
                            <div class="file-meta">
                                ${formatFileSize(file.size)} • ${formatDate(file.modified)} • ${file.modifiedBy}
                            </div>
                        </div>
                    </div>
                    <div class="file-actions">
                        ${isClickableFolder ? '<span style="font-size: 0.8em; opacity: 0.7;">📁 Abrir</span>' : ''}
                        ${isDocument ? `<button class="action-btn" onclick="event.stopPropagation(); previewFile('${file.name}', '${file.type}', '${file.size}', '${file.modified}', '${file.modifiedBy}', '${file.webUrl || ''}')">👁️ Ver</button>` : ''}
                        ${file.webUrl ? `<a href="${file.webUrl}" target="_blank" class="action-btn" onclick="event.stopPropagation();">🔗 SharePoint</a>` : ''}
                    </div>
                </div>
            `;
        });

        container.innerHTML = html;
    }

    function previewFile(name, type, size, modified, modifiedBy, webUrl) {
        const modal = document.getElementById('preview-modal');
        const title = document.getElementById('preview-title');
        const body = document.getElementById('preview-body');

        title.innerHTML = `<i class="fas fa-eye me-2"></i>${name}`;

        // Generar contenido de vista previa
        body.innerHTML = `
            <div class="preview-info">
                <h4><i class="fas fa-info-circle me-2"></i>Información del Archivo</h4>
                <div class="info-grid">
                    <div class="info-item">
                        <span class="info-label">Nombre</span>
                        <span class="info-value">${name}</span>
                    </div>
                    <div class="info-item">
                        <span class="info-label">Tipo</span>
                        <span class="info-value">${getFileTypeName(type)}</span>
                    </div>
                    <div class="info-item">
                        <span class="info-label">Tamaño</span>
                        <span class="info-value">${formatFileSize(parseInt(size))}</span>
                    </div>
                    <div class="info-item">
                        <span class="info-label">Modificado</span>
                        <span class="info-value">${formatDate(modified)}</span>
                    </div>
                    <div class="info-item">
                        <span class="info-label">Modificado por</span>
                        <span class="info-value">${modifiedBy}</span>
                    </div>
                    <div class="info-item">
                        <span class="info-label">URL SharePoint</span>
                        <span class="info-value">${webUrl ? '<a href="' + webUrl + '" target="_blank" style="color: #007bff; text-decoration: none;">🔗 Abrir en SharePoint</a>' : 'No disponible'}</span>
                    </div>
                </div>
            </div>

            <div class="preview-section">
                <h4><i class="fas fa-eye me-2"></i>Vista Previa del Contenido</h4>
                ${generatePreviewContent(name, type, size, modified, modifiedBy, webUrl)}
            </div>

            <div class="preview-section">
                <h4><i class="fas fa-tools me-2"></i>Acciones Disponibles</h4>
                <div style="display: flex; gap: 10px; flex-wrap: wrap;">
                    ${webUrl ? `<a href="${webUrl}" target="_blank" class="btn-test" style="text-decoration: none; display: inline-flex; align-items: center;"><i class="fas fa-external-link-alt me-2"></i>Abrir en SharePoint</a>` : ''}
                    ${type === 'image' && webUrl ? `<a href="${webUrl}" target="_blank" class="btn-test" style="text-decoration: none; display: inline-flex; align-items: center; background: #28a745;"><i class="fas fa-image me-2"></i>Ver Imagen Completa</a>` : ''}
                    <button class="btn-test" onclick="alert('Función de descarga disponible en SharePoint')" style="display: inline-flex; align-items: center;"><i class="fas fa-download me-2"></i>Descargar</button>
                    <button class="btn-test" onclick="copyToClipboard('${webUrl}')" style="display: inline-flex; align-items: center;"><i class="fas fa-link me-2"></i>Copiar Enlace</button>
                </div>
            </div>

            ${webUrl ? `
                <div class="preview-section" style="background: linear-gradient(135deg, #e3f2fd 0%, #f3e5f5 100%); border: 1px solid #2196f3;">
                    <h4><i class="fas fa-info-circle me-2" style="color: #2196f3;"></i>Acceso Directo</h4>
                    <p style="margin-bottom: 15px; color: #333;">
                        Para ver el contenido completo y todas las funcionalidades disponibles, accede directamente a SharePoint:
                    </p>
                    <div style="background: white; padding: 15px; border-radius: 8px; border-left: 4px solid #2196f3;">
                        <div style="display: flex; align-items: center; justify-content: space-between; flex-wrap: wrap; gap: 10px;">
                            <div style="flex: 1; min-width: 200px;">
                                <strong style="color: #333;">Enlace directo:</strong><br>
                                <small style="color: #666; word-break: break-all;">${webUrl}</small>
                            </div>
                            <a href="${webUrl}" target="_blank" style="background: #2196f3; color: white; padding: 10px 20px; border-radius: 6px; text-decoration: none; font-weight: 500; display: inline-flex; align-items: center;">
                                <i class="fas fa-external-link-alt me-2"></i>Ir Ahora
                            </a>
                        </div>
                    </div>
                </div>
            ` : ''}
        `;

        modal.style.display = 'block';

        // Cerrar modal con ESC
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape') {
                closePreview();
            }
        });
    }

    function generatePreviewContent(name, type, size, modified, modifiedBy, webUrl) {
        switch (type) {
            case 'pdf':
                return `
                    <div class="file-preview">
                        <div style="text-align: center; padding: 20px;">
                            <i class="fas fa-file-pdf fa-4x text-danger mb-3"></i>
                            <h5>Documento PDF</h5>
                            <p>Este archivo contiene un reporte generado por el Quiosco 2.</p>
                            <div class="simulated-content">
                                <div style="text-align: center;">
                                    <strong>Vista previa no disponible</strong><br>
                                    <small>Haz click en "Abrir en SharePoint" para ver el contenido completo</small>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
            case 'xlsx':
                return `
                    <div class="file-preview">
                        <div style="text-align: center; padding: 20px;">
                            <i class="fas fa-file-excel fa-4x text-success mb-3"></i>
                            <h5>Archivo Excel</h5>
                            <p>Contiene datos de inventario y reportes del Quiosco.</p>
                            <div class="simulated-content">
                                <div style="text-align: center;">
                                    <strong>Hoja de cálculo Excel</strong><br>
                                    <small>Datos: Inventario, ventas, reportes operacionales</small><br>
                                    <div style="margin-top: 15px; text-align: left; max-width: 400px; margin-left: auto; margin-right: auto;">
                                        <div style="border: 1px solid #ccc; padding: 10px; background: white; font-family: monospace; font-size: 0.8em;">
                                            <div style="display: grid; grid-template-columns: 1fr 1fr 1fr; gap: 10px; border-bottom: 2px solid #333; padding-bottom: 5px; margin-bottom: 5px;">
                                                <strong>Producto</strong><strong>Cantidad</strong><strong>Precio</strong>
                                            </div>
                                            <div style="display: grid; grid-template-columns: 1fr 1fr 1fr; gap: 10px; padding: 2px 0;">
                                                <span>Refrescos</span><span>150</span><span>$25.50</span>
                                            </div>
                                            <div style="display: grid; grid-template-columns: 1fr 1fr 1fr; gap: 10px; padding: 2px 0;">
                                                <span>Snacks</span><span>89</span><span>$18.00</span>
                                            </div>
                                            <div style="display: grid; grid-template-columns: 1fr 1fr 1fr; gap: 10px; padding: 2px 0;">
                                                <span>Café</span><span>45</span><span>$35.00</span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
            case 'docx':
                return `
                    <div class="file-preview">
                        <div style="text-align: center; padding: 20px;">
                            <i class="fas fa-file-word fa-4x text-primary mb-3"></i>
                            <h5>Documento Word</h5>
                            <p>Resumen de operaciones y reportes del día.</p>
                            <div class="simulated-content">
                                <div style="text-align: left; max-width: 500px; margin: 0 auto; padding: 20px; background: white; border-radius: 8px; font-family: serif;">
                                    <h6 style="color: #333; text-align: center; margin-bottom: 20px;">RESUMEN DE OPERACIONES</h6>
                                    <p style="color: #666; line-height: 1.6; margin-bottom: 15px;">
                                        <strong>Fecha:</strong> ${name.includes('2025-07') ? name.split('_').pop().replace('.docx', '') : 'Fecha del reporte'}<br>
                                        <strong>Ubicación:</strong> Quiosco 2 - POD AKNA<br>
                                        <strong>Operador:</strong> Sistema Automático
                                    </p>
                                    <p style="color: #666; line-height: 1.6;">
                                        Durante la jornada se registraron operaciones normales con un total de ventas satisfactorio.
                                        Se completaron todas las tareas de inventario y mantenimiento programadas.
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
            case 'txt':
                return `
                    <div class="file-preview">
                        <div style="text-align: center; padding: 20px;">
                            <i class="fas fa-file-alt fa-4x text-info mb-3"></i>
                            <h5>Archivo de Log</h5>
                            <p>Registro de eventos del sistema.</p>
                            <div class="simulated-content">
                                <div style="text-align: left; max-width: 600px; margin: 0 auto; padding: 15px; background: #1e1e1e; color: #00ff00; border-radius: 8px; font-family: 'Courier New', monospace; font-size: 0.8em;">
                                    <div>[2025-07-10 09:00:01] SISTEMA INICIADO</div>
                                    <div>[2025-07-10 09:00:15] Conexión establecida con base de datos</div>
                                    <div>[2025-07-10 09:01:32] Inventario sincronizado</div>
                                    <div>[2025-07-10 10:15:45] Venta registrada - Producto: Refresco</div>
                                    <div>[2025-07-10 11:30:22] Backup automático completado</div>
                                    <div>[2025-07-10 14:45:33] Mantenimiento preventivo ejecutado</div>
                                    <div>[2025-07-10 16:00:01] Reporte diario generado</div>
                                    <div>[2025-07-10 18:00:00] SISTEMA EN STANDBY</div>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
            case 'image':
                return `
                    <div class="file-preview">
                        <div style="text-align: center; padding: 20px;">
                            <i class="fas fa-image fa-4x text-warning mb-3"></i>
                            <h5>Imagen/Foto</h5>
                            <p>Evidencia fotográfica del Quiosco.</p>

                            <div style="background: #f8f9fa; border: 2px dashed #007bff; border-radius: 15px; padding: 30px; margin: 20px 0;">
                                <div style="text-align: center;">
                                    <i class="fas fa-camera fa-3x" style="color: #007bff; margin-bottom: 15px;"></i>
                                    <h6 style="color: #333; margin-bottom: 15px;">Vista Previa de Imagen</h6>
                                    <p style="color: #666; margin-bottom: 20px;">
                                        <strong>Archivo:</strong> ${name}<br>
                                        <strong>Tipo:</strong> Evidencia fotográfica del Quiosco<br>
                                        <strong>Tamaño:</strong> ${formatFileSize(parseInt(size))}
                                    </p>

                                    <div style="background: white; border-radius: 10px; padding: 20px; margin: 15px 0; box-shadow: 0 2px 10px rgba(0,0,0,0.1);">
                                        <div style="color: #666; margin-bottom: 15px;">
                                            <i class="fas fa-info-circle me-2"></i>
                                            <strong>Información de la imagen:</strong>
                                        </div>
                                        <div style="text-align: left; max-width: 400px; margin: 0 auto;">
                                            <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 10px; font-size: 0.9em;">
                                                <div><strong>Formato:</strong> PNG</div>
                                                <div><strong>Calidad:</strong> Alta</div>
                                                <div><strong>Origen:</strong> Quiosco ${modifiedBy}</div>
                                                <div><strong>Propósito:</strong> Evidencia</div>
                                            </div>
                                        </div>
                                    </div>

                                    <div style="background: #e3f2fd; border-radius: 8px; padding: 15px; margin-top: 20px;">
                                        <div style="color: #1976d2; margin-bottom: 10px;">
                                            <i class="fas fa-shield-alt me-2"></i>
                                            <strong>Restricciones de Seguridad</strong>
                                        </div>
                                        <p style="color: #333; font-size: 0.9em; margin: 0;">
                                            Por políticas de seguridad, las imágenes no se pueden mostrar directamente en esta vista previa.
                                            Usa el botón "Abrir en SharePoint" para ver la imagen completa.
                                        </p>
                                    </div>

                                    ${webUrl ? `
                                        <div style="margin-top: 20px;">
                                            <a href="${webUrl}" target="_blank" style="display: inline-block; background: #007bff; color: white; padding: 12px 24px; border-radius: 8px; text-decoration: none; font-weight: 500;">
                                                <i class="fas fa-external-link-alt me-2"></i>Ver Imagen Completa en SharePoint
                                            </a>
                                        </div>
                                    ` : ''}
                                </div>
                            </div>
                        </div>
                    </div>
                `;
            default:
                return `
                    <div class="file-preview">
                        <div style="text-align: center; padding: 20px;">
                            <i class="fas fa-file fa-4x text-secondary mb-3"></i>
                            <h5>Archivo</h5>
                            <p>Contenido del archivo.</p>
                            <div class="simulated-content">
                                <div style="text-align: center;">
                                    <strong>Vista previa no disponible</strong><br>
                                    <small>Usa SharePoint para ver el contenido completo</small>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
        }
    }

    function closePreview() {
        document.getElementById('preview-modal').style.display = 'none';
    }

    function copyToClipboard(text) {
        if (!text) {
            alert('No hay enlace disponible para copiar');
            return;
        }

        navigator.clipboard.writeText(text).then(function() {
            // Crear notificación temporal
            const notification = document.createElement('div');
            notification.innerHTML = '<i class="fas fa-check me-2"></i>Enlace copiado al portapapeles';
            notification.style.cssText = `
                position: fixed;
                top: 20px;
                right: 20px;
                background: #28a745;
                color: white;
                padding: 12px 20px;
                border-radius: 8px;
                z-index: 2000;
                box-shadow: 0 4px 12px rgba(0,0,0,0.3);
                font-weight: 500;
            `;
            document.body.appendChild(notification);

            setTimeout(() => {
                notification.remove();
            }, 3000);
        }).catch(function() {
            alert('Enlace: ' + text);
        });
    }

    function getFileTypeName(type) {
        switch (type) {
            case 'pdf': return 'Documento PDF';
            case 'xlsx': return 'Hoja de Cálculo Excel';
            case 'docx': return 'Documento Word';
            case 'txt': return 'Archivo de Texto';
            case 'image': return 'Imagen/Foto';
            case 'folder': return 'Carpeta';
            default: return 'Archivo';
        }
    }

    function updateBreadcrumb(folderPath) {
        const breadcrumb = document.getElementById('breadcrumb');
        const currentPathSpan = document.getElementById('current-path');

        if (folderPath) {
            breadcrumb.style.display = 'block';
            const pathParts = folderPath.split('/').filter(p => p);
            let pathHtml = '';
            let currentFullPath = '';

            pathParts.forEach((part, index) => {
                currentFullPath += (index > 0 ? '/' : '') + part;
                pathHtml += ` > <span class="breadcrumb-item" onclick="loadFiles('${currentFullPath}')">${part}</span>`;
            });

            currentPathSpan.innerHTML = pathHtml;
        } else {
            breadcrumb.style.display = 'none';
        }
    }

    function navigateToRoot() {
        loadFiles('');
    }

    function getFileIcon(file) {
        if (file.isFolder || file.type === 'folder') return '📁';
        if (file.type === 'status') return '🔄';
        if (file.type === 'error') return '❌';

        switch (file.type) {
            case 'pdf': return '📄';
            case 'image': return '🖼️';
            case 'xlsx': return '📊';
            case 'docx': return '📝';
            case 'txt': return '📋';
            default: return '📄';
        }
    }

    function formatFileSize(bytes) {
        if (bytes === 0) return '0 B';
        const k = 1024;
        const sizes = ['B', 'KB', 'MB', 'GB'];
        const i = Math.floor(Math.log(bytes) / Math.log(k));
        return parseFloat((bytes / Math.pow(k, i)).toFixed(1)) + ' ' + sizes[i];
    }

    function formatDate(dateString) {
        if (!dateString) return 'Sin fecha';
        const date = new Date(dateString);
        return date.toLocaleDateString('es-MX') + ' ' + date.toLocaleTimeString('es-MX', {hour: '2-digit', minute: '2-digit'});
    }

    // Cerrar modal al hacer click fuera
    window.onclick = function(event) {
        const modal = document.getElementById('preview-modal');
        if (event.target == modal) {
            closePreview();
        }
    }

    // Agregar spinner a formularios
    document.querySelectorAll('form').forEach(function(form) {
        form.addEventListener('submit', function() {
            var button = this.querySelector('button[type="submit"]');
            if (button) {
                var originalText = button.innerHTML;
                button.innerHTML = '<span class="spinner"></span>Procesando...';
                button.disabled = true;
            }
        });
    });
</script>